Sql server中DateDiff用法  2010-01-14 17:03:08|  分类： sql server |  标签： |字号大中小 订阅 .

  
DATEDIFF 函数 [日期和时间]

功能 
返回两个日期之间的间隔。

语法 
DATEDIFF ( date-part, date-expression-1, date-expression-2 )

date-part :
year | quarter | month | week | day | hour | minute | second | millisecond

参数 
date-part    指定要测量其间隔的日期部分。

有关日期部分的详细信息，请参见日期部分。

date-expression-1    某一间隔的起始日期。从 date-expression-2 中减去该值，返回两个参数之间 date-parts 的【天数】。

date-expression-2    某一间隔的结束日期。从该值中减去 Date-expression-1，返回两个参数之间 date-parts 的【天数】。

用法 
此函数计算两个指定日期之间日期部分的数目。结果为日期部分中等于（date2 - date1）的有符号的整数值。

当结果不是日期部分的偶数倍时，DATEDIFF 将被截断而不是被舍入。

当使用 day 作为日期部分时，DATEDIFF 返回两个指定的时间之间（包括第二个日期但不包括第一个日期）的午夜数。

当使用 month 作为日期部分时，DATEDIFF 返回两个日期之间（包括第二个日期但不包括第一个日期）出现的月的第一天的数目。

当使用 week 作为日期部分时，DATEDIFF 返回两个日期（包括第二个日期但不包括第一个日期）之间星期日的数目。

对于更小的时间单位存在溢出值：

milliseconds    24 天 

seconds    68 年 

minutes    4083 年 

others    没有溢出限制 

如果超出这些限制，此函数将返回溢出错误。

标准和兼容性 
SQL/92    Transact-SQL 扩展。 

SQL/99    Transact-SQL 扩展。 

Sybase    与 Adaptive Server Enterprise 兼容。 

下面示例的语句返回 1：

SELECT datediff( hour, '4:00AM', '5:50AM' )下面的语句返回 102：

SELECT datediff( month, '1987/05/02', '1995/11/15' )下面的语句返回 0：

SELECT datediff( day, '00:00', '23:59' )下面的语句返回 4：

SELECT datediff( day,
   '1999/07/19 00:00',
   '1999/07/23 23:59' )下面的语句返回 0：

SELECT datediff( month, '1999/07/19', '1999/07/23' )下面的语句返回 1：

SELECT datediff( month, '1999/07/19', '1999/08/23' )




通常，你需要获得当前日期和计算一些其他的日期，例如，你的程序可能需要判断一个月的第一天或者最后一天。你们大部分人大概都知道怎样把日期进行分割（年、月、日等），然后仅仅用分割出来的年、月、日等放在几个函数中计算出自己所需要的日期！
在这篇文章里，我将告诉你如何使用DATEADD和DATEDIFF函数来计算出在你的程序中可能你要用到的一些不同日期。 
                                         
在使用本文中的例子之前，你必须注意以下的问题。大部分可能不是所有例子在不同的机器上执行的结果可能不一样，这完全由哪一天是一个星期的第一天这个设 置决定。第一天（DATEFIRST）设定决定了你的系统使用哪一天作为一周的第一天。所有以下的例子都是以星期天作为一周的第一天来建立，也就是第一天 设置为7。假如你的第一天设置不一样，你可能需要调整这些例子，使它和不同的第一天设置相符合。你可以通过@@DATEFIRST函数来检查第一天设置。 
                                                                
为了理解这些例子，我们先复习一下DATEDIFF和DATEADD函数。DATEDIFF函数计算两个日期之间的小时、天、周、月、年等时间间隔总 数。DATEADD函数计算一个日期通过给时间间隔加减来获得一个新的日期。要了解更多的DATEDIFF和DATEADD函数以及时间间隔可以阅读微软 联机帮助。 
                                                                      
使用DATEDIFF和DATEADD函数来计算日期，和本来从当前日期转换到你需要的日期的考虑方法有点不同。你必须从时间间隔这个方面来考虑。比 如，从当前日期到你要得到的日期之间有多少时间间隔，或者，从今天到某一天（比如1900-1-1）之间有多少时间间隔，等等。理解怎样着眼于时间间隔有 助于你轻松的理解我的不同的日期计算例子。 
                                           
一个月的第一天  
                                  
第一个例子，我将告诉你如何从当前日期去这个月的最后一天。请注意：这个例子以及这篇文章中的其他例子都将只使用DATEDIFF和DATEADD函数来计算我们想要的日期。每一个例子都将通过计算但前的时间间隔，然后进行加减来得到想要计算的日期。 
                         
                         
这是计算一个月第一天的SQL  脚本：  
Select  DATEADD(mm,  DATEDIFF(mm,0,getdate()),  0)  
                         
                               
我们把这个语句分开来看看它是如何工作的。最核心的函数是getdate()，大部分人都知道这个是返回当前的日期和时间的函数。下一个执行的函数 DATEDIFF(mm,0,getdate())是计算当前日期和“1900-01-01　00:00:00.000”这个日期之间的月数。记住：时期 和时间变量和毫秒一样是从“1900-01-01  00:00:00.000”开始计算的。这就是为什么你可以在DATEDIFF函数中指定第一个时间 表达式为“0”。下一个函数是DATEADD，增加当前日期到“1900-01-01”的月数。通过增加预定义的日期“1900-01-01”和当前日期 的月数，我们可以获得这个月的第一天。另外，计算出来的日期的时间部分将会是“00:00:00.000”。 
                                                                           
这个计算的技巧是先计算当前日期到“1900-01-01”的时间间隔数，然后把它加到“1900-01-01”上来获得特殊的日期，这个技巧可以用来计算很多不同的日期。下一个例子也是用这个技巧从当前日期来产生不同的日期。 
                         
本周的星期一  
                         
这里我是用周(wk)的时间间隔来计算哪一天是本周的星期一。  
                         
Select  DATEADD(wk,  DATEDIFF(wk,0,getdate()),  0)  
                         
一年的第一天  
                         
现在用年(yy)的时间间隔来显示这一年的第一天。  
Select  DATEADD(yy,  DATEDIFF(yy,0,getdate()),  0)  
                         
季度的第一天  
                         
假如你要计算这个季度的第一天，这个例子告诉你该如何做。  
                         
Select  DATEADD(qq,  DATEDIFF(qq,0,getdate()),  0)  
                         
当天的半夜  
                  
曾经需要通过getdate()函数为了返回时间值截掉时间部分，就会考虑到当前日期是不是在半夜。假如这样，这个例子使用DATEDIFF和DATEADD函数来获得半夜的时间点。 
Select  DATEADD(dd,  DATEDIFF(dd,0,getdate()),  0)  
                         
深入DATEDIFF和DATEADD函数计算  
你可以明白，通过使用简单的DATEDIFF和DATEADD函数计算，你可以发现很多不同的可能有意义的日期。  
目前为止的所有例子只是仅仅计算当前的时间和“1900-01-01”之间的时间间隔数量，然后把它加到“1900-01-01”的时间间隔上来计算出 日期。假定你修改时间间隔的数量，或者使用不同的时间间隔来调用DATEADD函数，或者减去时间间隔而不是增加，那么通过这些小的调整你可以发现和多不 同的日期。 
这里有四个例子使用另外一个DATEADD函数来计算最后一天来分别替换DATEADD函数前后两个时间间隔。  
                         
上个月的最后一天  
这是一个计算上个月最后一天的例子。它通过从一个月的最后一天这个例子上减去3毫秒来获得。有一点要记住，在Sql  
Server中时间是精确到3毫秒。这就是为什么我需要减去3毫秒来获得我要的日期和时间。  
                         
Select  dateadd(ms,-3,DATEADD(mm, DATEDIFF(mm,0,getdate()),  0))  
计算出来的日期的时间部分包含了一个Sql  
Server可以记录的一天的最后时刻(“23:59:59:997”)的时间。  
                         
去年的最后一天  
连接上面的例子，为了要得到去年的最后一天，你需要在今年的第一天上减去3毫秒。  
                         
Select  dateadd(ms,-3,DATEADD(yy,  DATEDIFF(yy,0,getdate()),  0))  
                         
本月的最后一天  
                                              
现在，为了获得本月的最后一天，我需要稍微修改一下获得上个月的最后一天的语句。修改需要给用DATEDIFF比较当前日期和“1900-01-01” 返回的时间间隔上加1。通过加1个月，我计算出下个月的第一天，然后减去3毫秒，这样就计算出了这个月的最后一天。这是计算本月最后一天的SQL脚本。 

Select  dateadd(ms,-3,DATEADD(mm,  DATEDIFF(m,0,getdate())+1,  0))  
                         
本年的最后一天  
                         
你现在应该掌握这个的做法，这是计算本年最后一天脚本  
                         
Select  dateadd(ms,-3,DATEADD(yy,  DATEDIFF(yy,0,getdate())+1,  0))。  
                         
本月的第一个星期一  
                         
好了，现在是最后一个例子。这里我要计算这个月的第一个星期一。这是计算的脚本。  
                         
select  DATEADD(wk,  DATEDIFF(wk,0,dateadd(dd,6-datepart(day,getdate()),getdate())),  0)           
在这个例子里，我使用了“本周的星期一”的脚本，并作了一点点修改。修改的部分是把原来脚本中“getdate()”部分替换成计算本月的第6天，在计算中用本月的第6天来替换当前日期使得计算可以获得这个月的第一个星期一。 
                                         
总结  
通过使用这个计算日期的时间间隔的数学方法，我发现为了显示两个日期之间间隔的有用历法是有价值的。注意，这只是计算出这些日期的一种方法。要牢记，还 有很多方法可以得到相同的计算结果。假如你有其他的方法，那很不错，要是你没有，我希望这些例子可以给你一些启发，当你要用DATEADD和 DATEDIFF函数计算你程序可能要用到的日期时。 
                         
                         
                        --------------------------------------------------------------- 
                         
                        附录，其他日期处理方法  
                         
                        1)去掉时分秒  
                        declare  @  datetime  
                        set  @  =  getdate()  --'2003-7-1  10:00:00'  
                        Select  @,DATEADD(day,  DATEDIFF(day,0,@),  0)  
                         
                        2）显示星期几  
                        select  datename(weekday,getdate())    
                         
                        3）如何取得某个月的天数  
                        declare  @m  int  
                        set  @m=2  --月份  
                        select    datediff(day,'2003-'+cast(@m  as  
                        varchar)+'-15'  ,'2003-'+cast(@m+1    as  
                        varchar)+'-15')  
                        另外，取得本月天数  
                        select    datediff(day,cast(month(GetDate())  as  
                        varchar)+'-'+cast(month(GetDate())  as  varchar)+'-15'  
                        ,cast(month(GetDate())  as  
                        varchar)+'-'+cast(month(GetDate())+1    as  
                        varchar)+'-15')  
                        或者使用计算本月的最后一天的脚本，然后用DAY函数区最后一天  
                        Select  Day(dateadd(ms,-3,DATEADD(mm,  
                        DATEDIFF(m,0,getdate())+1,  0)))  
                         
                        4）判断是否闰年：  
                        Select  case  day(dateadd(mm,  2,  
                        dateadd(ms,-3,DATEADD(yy,  DATEDIFF(yy,0,getdate()),  
                        0))))  when  28  then  '平年'  else  '闰年'  end  
                        或者  
                        select  case  
                        datediff(day,datename(year,getdate())+'-02-01',dateadd(mm,1,datename(year,getdate())+'-02-01')) 
                         
                        when  28  then  '平年'  else  '闰年'  end  
                         
                        5）一个季度多少天  
                        declare  @m  tinyint,@time  smalldatetime  
                        select  @m=month(getdate())  
                        select  @m=case  when  @m  between  1  and  3  then  1  
                                               when  @m  between  4  and  6  
                        then  4  
                                               when  @m  between  7  and  9  
                        then  7  
                                               else  10  end  
                        select  
                        @time=datename(year,getdate())+'-'+convert(varchar(10),@m)+'-01' 
                         
                        select  datediff(day,@time,dateadd(mm,3,@time))